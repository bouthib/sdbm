-- *
-- * Copyright (c) 2008-2024 Benoit Bouthillier. All rights reserved.
-- * Licensed under the MIT license.
-- * See LICENSE file in the project root for full license information.
-- *

--
-- Script :
--    sbdm_schema.sql
--
-- Description :
--    Mise en place des tables du schéma 
--


WHENEVER OSERROR  EXIT 8
WHENEVER SQLERROR EXIT SQL.SQLCODE


CONNECT / as sysdba
alter session set container = XEPDB1;
alter session set current_schema = SDBM;



CREATE TABLE DEFAUT
(
   CLE    VARCHAR2(50 CHAR)    NOT NULL
  ,VALEUR VARCHAR2(4000 CHAR)  NOT NULL
)
TABLESPACE SDBM_DATA
MONITORING
CACHE;


ALTER TABLE DEFAUT
   ADD CONSTRAINT DEF_PK_DEFAUT PRIMARY KEY (CLE)
      USING INDEX
      TABLESPACE SDBM_DATA;


INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'CONNEXION_OR'
  ,'
(DESCRIPTION =
   (ADDRESS_LIST =
      (ADDRESS = 
         (PROTOCOL = TCP)
         (HOST     = {adresse IP})
         (PORT     = {port IP})
      )
   )
   (CONNECT_DATA =
      (SID    = {nom de l''instance})
      (SERVER = DEDICATED)
   )
)
'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'CONNEXION_MS'
  ,'//{adresse IP}:{port IP};instanceName={instance};'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'CONNEXION_MY'
  ,'//{adresse IP}:{port IP}'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'USAGER_CONNEXION'
  ,'SDBMON'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'SQL_HORAIRE'
  ,'
SELECT 1
  FROM DUAL
 WHERE /* JOUR  */ (TRIM(TO_CHAR(SYSDATE,''DAY'',''NLS_DATE_LANGUAGE = AMERICAN''))
    IN (''MONDAY'',''TUESDAY'',''WEDNESDAY'',''THURSDAY'',''FRIDAY'',''SATURDAY'',''SUNDAY''))
   AND /* HEURE */ (TO_CHAR(SYSDATE,''HH24:MI'') BETWEEN ''00:00'' AND ''23:59'')
'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'DELAI_MAX_EXEC_SEC'
  ,'30'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'DELAI_AVERTISSEMENT'
  ,'60'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'CODE_RETOUR_SUCCES'
  ,'{RC} = 0'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'FR_DN'
  ,'NON-DISPONIBLE'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'FR_UP'
  ,'DISPONIBLE'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'AN_DN'
  ,'DOWN'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'AN_UP'
  ,'UP'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'FR_ER'
  ,'PROBLÈME'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'FR_OK'
  ,'RÉSOLUTION'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'FR_--'
  ,'ÉVÉNEMENT'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'AN_ER'
  ,'PROBLEM'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'AN_OK'
  ,'CLEARED'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'AN_--'
  ,'EVENT'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'FR_AG'
  ,'ALERTE'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'AN_AG'
  ,'ALERT'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'FR_AGENT'
  ,'RÉSULTAT (TÂCHE)'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'AN_AGENT'
  ,'RESULT (JOB)'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'CD_NB_ESSAI'
  ,'3'
);

INSERT INTO DEFAUT
(
   CLE
  ,VALEUR
)
VALUES
(
   'CD_MIN_ENTRE_ESSAI'
  ,'5'
);



CREATE TABLE PARAMETRE
(
   CLE                            NUMBER(1)                            NOT NULL
  ,STATUT_SERVEUR                 CHAR(2 CHAR)                         NOT NULL
  ,FREQU_VERIF_CIBLE_SEC          NUMBER(4)                            NOT NULL
  ,DELAI_MAX_CONNEXION_SEC        NUMBER(3)                            NOT NULL
  ,DELAI_EPURATION_JOURNAL        NUMBER(3)                            NOT NULL
  ,NIVEAU_JOURNAL_SERVEUR         VARCHAR2(30 CHAR)                    NOT NULL
  ,GARANTIE_NOTIF_SERVEUR         CHAR(2 CHAR)                         NOT NULL
  ,LIMITE_NOTIF_CYCLE_SERVEUR     NUMBER(4)                            NOT NULL
  ,STATUT_AGENT                   CHAR(2 CHAR)                         NOT NULL
  ,FREQU_VERIF_AGENT              NUMBER(4)                            NOT NULL
  ,FREQU_VERIF_AGENT_TACHE        NUMBER(4)                            NOT NULL
  ,RETARD_MAX_SOUMISSION_TACHE    NUMBER(5)                            NOT NULL
  ,DELAI_EPURATION_LOG_BD_TACHE   NUMBER(3)                            NOT NULL
  ,DELAI_EPURATION_LOG_FIC_TACHE  NUMBER(3)                            NOT NULL
  ,LIMITE_NOTIF_CYCLE_AGENT       NUMBER(4)                            NOT NULL
  ,DELAI_EPURATION_COLLECTE       NUMBER(4)                            NOT NULL
  ,STATUT_COLLECTE                CHAR(2 CHAR)                         NOT NULL
  ,DELAI_AJUSTEMENT_DST_SEC       NUMBER(4)                            NOT NULL
  ,FUSEAU_HOR_DERN_EXEC           NUMBER(2)
  ,SERVEUR_SMTP                   VARCHAR2(50 CHAR)
  ,PORT_SMTP                      NUMBER(5)                            NOT NULL
  ,NOM_USAGER_SMTP                VARCHAR2(30 CHAR)
  ,MDP_USAGER_SMTP                VARCHAR2(512 CHAR)
  ,EXPEDITEUR_SMTP                VARCHAR2(100 CHAR)
  ,STARTTLS_SMTP                  CHAR(2 CHAR)        DEFAULT 'FA'     NOT NULL 
  ,CHEMIN_WALLET_SMTP             VARCHAR2(512 CHAR) 
  ,MDP_WALLET_SMTP                VARCHAR2(512 CHAR)
  ,ADRESSE_PROXY_HTTP             VARCHAR2(100 CHAR)
  ,LANGUE                         CHAR(2 CHAR)                         NOT NULL
)   
TABLESPACE SDBM_DATA
MONITORING
CACHE;


ALTER TABLE PARAMETRE
   ADD CONSTRAINT PAR_CHK_GARANTIE_NOTIF_SERVEUR
      CHECK (GARANTIE_NOTIF_SERVEUR IN (/* Complète */ 'CO',/* Partielle */ 'PA',/* Aucune */ 'AU'));


ALTER TABLE PARAMETRE
   ADD CONSTRAINT PAR_PK_PARAMETRE_NOTIF_EXT PRIMARY KEY (CLE)
      USING INDEX
      TABLESPACE SDBM_DATA;


INSERT INTO PARAMETRE
(
   CLE
  ,STATUT_SERVEUR
  ,FREQU_VERIF_CIBLE_SEC
  ,DELAI_MAX_CONNEXION_SEC
  ,DELAI_EPURATION_JOURNAL
  ,NIVEAU_JOURNAL_SERVEUR
  ,GARANTIE_NOTIF_SERVEUR
  ,LIMITE_NOTIF_CYCLE_SERVEUR
  ,STATUT_AGENT
  ,FREQU_VERIF_AGENT
  ,FREQU_VERIF_AGENT_TACHE
  ,RETARD_MAX_SOUMISSION_TACHE
  ,DELAI_EPURATION_LOG_BD_TACHE
  ,DELAI_EPURATION_LOG_FIC_TACHE
  ,LIMITE_NOTIF_CYCLE_AGENT
  ,DELAI_EPURATION_COLLECTE
  ,STATUT_COLLECTE
  ,DELAI_AJUSTEMENT_DST_SEC
  ,PORT_SMTP
  ,CHEMIN_WALLET_SMTP
  ,ADRESSE_PROXY_HTTP
  ,LANGUE
)
VALUES
(
   1
  ,'AC'
  ,30
  ,30
  ,7
  ,'NORMAL'
  ,'CO'
  ,0
  ,'AC'
  ,30
  ,10
  ,120
  ,7
  ,7
  ,0
  ,365
  ,'AC'
  ,60
  ,25
  ,'file:/opt/oracle/admin/wallet-smtp'
  ,'{BROWSER_ADDR}'
  ,'FR'
);



CREATE TABLE PARAMETRE_NOTIF_EXT
(
   TYPE_NOTIF               VARCHAR2(30 CHAR)    NOT NULL
  ,SIGNATURE_FONCTION       VARCHAR2(500 CHAR)   NOT NULL
  ,COMMENTAIRE              VARCHAR2(1000 CHAR)
)   
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE PARAMETRE_NOTIF_EXT
   ADD CONSTRAINT PNE_PK_PARAMETRE_NOTIF_EXT PRIMARY KEY (TYPE_NOTIF)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE DESTI_NOTIF
(
   DESTI_NOTIF          VARCHAR2(30 CHAR)            NOT NULL
  ,SQL_HORAIRE          VARCHAR2(500 CHAR)  DEFAULT
'
SELECT 1
  FROM DUAL
 WHERE /* JOUR  */ (TRIM(TO_CHAR(SYSDATE,''DAY'',''NLS_DATE_LANGUAGE = AMERICAN'')) IN (''MONDAY'',''TUESDAY'',''WEDNESDAY'',''THURSDAY'',''FRIDAY'',''SATURDAY'',''SUNDAY''))
   AND /* HEURE */ (TO_CHAR(SYSDATE,''HH24:MI'') BETWEEN ''00:00'' AND ''23:59'')
'                                                          
                                                     NOT NULL
  ,COMMENTAIRE          VARCHAR2(1000 CHAR)
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE DESTI_NOTIF
   ADD CONSTRAINT DEN_PK_DESTI_NOTIF PRIMARY KEY (DESTI_NOTIF)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE DESTI_NOTIF_DETAIL
(
   DESTI_NOTIF          VARCHAR2(30 CHAR)                     NOT NULL
  ,TYPE_NOTIF           VARCHAR2(30 CHAR)    DEFAULT 'SMTP'   NOT NULL
  ,ADRESSE              VARCHAR2(100 CHAR)                    NOT NULL
  ,RETRAIT_ACCENT       CHAR(2 CHAR)         DEFAULT 'FA'     NOT NULL
  ,SUPPORT_FICHIER      CHAR(2 CHAR)         DEFAULT 'VR'     NOT NULL
  ,SQL_HORAIRE          VARCHAR2(500 CHAR)   DEFAULT
'
SELECT 1
  FROM DUAL
 WHERE /* JOUR  */ (TRIM(TO_CHAR(SYSDATE,''DAY'',''NLS_DATE_LANGUAGE = AMERICAN'')) IN (''MONDAY'',''TUESDAY'',''WEDNESDAY'',''THURSDAY'',''FRIDAY'',''SATURDAY'',''SUNDAY''))
   AND /* HEURE */ (TO_CHAR(SYSDATE,''HH24:MI'') BETWEEN ''00:00'' AND ''23:59'')
'                                                          
                                                              NOT NULL
  ,FORMULE_NOTIF_DIF    VARCHAR2(1000 CHAR)
  ,COMMENTAIRE          VARCHAR2(1000 CHAR)
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE DESTI_NOTIF_DETAIL
   ADD CONSTRAINT DND_CHK_RETRAIT_ACCENT
      CHECK (RETRAIT_ACCENT IN (/* Vrai */ 'VR',/* Faux */ 'FA'));

ALTER TABLE DESTI_NOTIF_DETAIL
   ADD CONSTRAINT DND_CHK_SUPPORT_FICHIER
      CHECK (SUPPORT_FICHIER IN (/* Vrai */ 'VR',/* Faux */ 'FA'));


ALTER TABLE DESTI_NOTIF_DETAIL
   ADD CONSTRAINT DND_PK_DESTI_NOTIF PRIMARY KEY (DESTI_NOTIF, TYPE_NOTIF, ADRESSE)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE CIBLE
(
   TYPE_CIBLE           CHAR(2 CHAR)                          NOT NULL
  ,SOUS_TYPE_CIBLE      CHAR(2 CHAR)                          NOT NULL
  ,NOM_CIBLE            VARCHAR2(30 CHAR)                     NOT NULL
  ,NOM_USAGER           VARCHAR2(30 CHAR)                     NOT NULL
  ,MDP_USAGER           VARCHAR2(512 CHAR)                    NOT NULL
  ,TYPE_CONNEXION       CHAR(2 CHAR)         DEFAULT 'NO'     NOT NULL
  ,CONNEXION            VARCHAR2(1000 CHAR)                   NOT NULL
  ,STARTUP_TIME         DATE
  ,DH_MAJ_STATUT        DATE                 DEFAULT SYSDATE  NOT NULL
  ,STATUT               CHAR(2 CHAR)         DEFAULT 'UK'     NOT NULL
  ,NOTIF_EFFECT         CHAR(2 CHAR)         DEFAULT 'OK'     NOT NULL
  ,NOTIFICATION         CHAR(2 CHAR)         DEFAULT 'AC'     NOT NULL
  ,DESTI_NOTIF          VARCHAR2(30 CHAR)                     NOT NULL
  ,SQL_HORAIRE          VARCHAR2(500 CHAR)   DEFAULT
'
SELECT 1
  FROM DUAL
 WHERE /* JOUR  */ (TRIM(TO_CHAR(SYSDATE,''DAY'',''NLS_DATE_LANGUAGE = AMERICAN'')) IN (''MONDAY'',''TUESDAY'',''WEDNESDAY'',''THURSDAY'',''FRIDAY'',''SATURDAY'',''SUNDAY''))
   AND /* HEURE */ (TO_CHAR(SYSDATE,''HH24:MI'') BETWEEN ''00:00'' AND ''23:59'')
'                                                          
                                                              NOT NULL
  ,DH_DERN_VERIF        DATE
  ,DH_PROCHAINE_VERIF   DATE
  ,INTERVAL             VARCHAR2(500 CHAR)
  ,NOM_SERVEUR          VARCHAR2(64 CHAR)
  ,NOM_INSTANCE         VARCHAR2(16 CHAR)
  ,VERSION              VARCHAR2(100 CHAR)
  ,FICHIER_ALERTE       VARCHAR2(512 CHAR)
  ,TYPE_BD              CHAR(2 CHAR)         DEFAULT 'NI'     NOT NULL
  ,TYPE_CIBLE_REF       CHAR(2 CHAR)
  ,NOM_CIBLE_REF        VARCHAR2(30 CHAR)
  ,COMMENTAIRE          VARCHAR2(1000 CHAR)
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE CIBLE
   ADD CONSTRAINT CIB_CHK_TYPE_CIBLE
      CHECK (TYPE_CIBLE IN (/* Base de données */ 'BD'));

ALTER TABLE CIBLE
   ADD CONSTRAINT CIB_CHK_SOUS_TYPE_CIBLE
      CHECK (SOUS_TYPE_CIBLE IN (/* Oracle */ 'OR', /* Microsoft SQL */ 'MS', /* MySQL */ 'MY'));

ALTER TABLE CIBLE
   ADD CONSTRAINT CIB_CHK_TYPE_CONNEXION
      CHECK (TYPE_CONNEXION IN (/* Normale */ 'NO',/* SYSDBA */ 'SD'));

ALTER TABLE CIBLE
   ADD CONSTRAINT CIB_CHK_STATUT
      CHECK (STATUT IN (/* Disponible */ 'UP',/* Non-disponible */ 'DN',/* Inconnu */ 'UK'));

ALTER TABLE CIBLE
   ADD CONSTRAINT CIB_CHK_NOTIFICATION
      CHECK (NOTIFICATION  IN (/* Activée */ 'AC',/* Inactif */ 'IN'));

ALTER TABLE CIBLE
   ADD CONSTRAINT CIB_CHK_NOTIF_EFFECT
      CHECK (NOTIF_EFFECT IN (/* Notification effectuée */ 'OK',/* Notification à effectuer */ 'AE'));

ALTER TABLE SDBM.CIBLE
   ADD CONSTRAINT CIB_CHK_TYPE_BD
      CHECK (TYPE_BD IN (/* Instance standard */ 'NI',/* Instance ASM */ 'AI',/* Instance RAC */ 'RI',/* Base de données RAC */ 'RD'));


ALTER TABLE CIBLE
   ADD CONSTRAINT CIB_PK_CIBLE PRIMARY KEY (TYPE_CIBLE, NOM_CIBLE)
      USING INDEX
      TABLESPACE SDBM_DATA;


ALTER TABLE CIBLE
   ADD CONSTRAINT CIB_UK_CIBLE UNIQUE (TYPE_CIBLE, SOUS_TYPE_CIBLE, NOM_CIBLE)
      USING INDEX
      TABLESPACE SDBM_DATA;

CREATE INDEX CIB_FK_CIBLE_REF ON CIBLE (TYPE_CIBLE_REF, NOM_CIBLE_REF)
   TABLESPACE SDBM_DATA;



CREATE TABLE HIST_CIBLE
(
   DH_HIST_CIBLE        DATE                 DEFAULT SYSDATE  NOT NULL
  ,TYPE_CIBLE           CHAR(2 CHAR)                          NOT NULL
  ,NOM_CIBLE            VARCHAR2(30 CHAR)                     NOT NULL
  ,STATUT               CHAR(2 CHAR)         DEFAULT 'UK'     NOT NULL
  ,ERREUR_RESEAU        CHAR(2 CHAR)         DEFAULT 'FA'     NOT NULL
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE HIST_CIBLE
   ADD CONSTRAINT HCI_CHK_TYPE_CIBLE
      CHECK (TYPE_CIBLE IN (/* Base de données */ 'BD'));

ALTER TABLE HIST_CIBLE
   ADD CONSTRAINT HCI_CHK_STATUT
      CHECK (STATUT IN (/* Disponible */ 'UP',/* Non-disponible */ 'DN',/* Redémarrage */ 'RD',/* Inconnu */ 'UK'));

ALTER TABLE HIST_CIBLE
   ADD CONSTRAINT HCI_CHK_ERREUR_RESEAU
      CHECK (ERREUR_RESEAU IN (/* Vrai */ 'VR',/* Faux */ 'FA'));


ALTER TABLE HIST_CIBLE
   ADD CONSTRAINT HCI_PK_HIST_CIBLE PRIMARY KEY (DH_HIST_CIBLE, TYPE_CIBLE, NOM_CIBLE)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE EVENEMENT
(
   TYPE_CIBLE           CHAR(2 CHAR)         DEFAULT 'BD'     NOT NULL
  ,SOUS_TYPE_CIBLE      CHAR(2 CHAR)         DEFAULT 'OR'     NOT NULL
  ,NOM_EVENEMENT        VARCHAR2(100 CHAR)                    NOT NULL
  ,TYPE_EVENEMENT       CHAR(2 CHAR)         DEFAULT 'MN'     NOT NULL
  ,TYPE_FERMETURE       CHAR(2 CHAR)         DEFAULT 'RE'     NOT NULL
  ,COMMANDE             VARCHAR2(4000 CHAR)                   NOT NULL
  ,INTERVAL_DEFAUT      VARCHAR2(500 CHAR)                    NOT NULL
  ,DESTI_NOTIF_DEFAUT   VARCHAR2(30 CHAR)                     NOT NULL
  ,DELAI_MAX_EXEC_SEC   NUMBER(3)            DEFAULT 30       NOT NULL
  ,COMMENTAIRE          VARCHAR2(1000 CHAR)
  ,VISIBLE              CHAR(2 CHAR)         DEFAULT 'AC'     NOT NULL
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE EVENEMENT
   ADD CONSTRAINT EVE_CHK_TYPE_CIBLE
      CHECK (TYPE_CIBLE IN (/* Base de données */ 'BD'));

ALTER TABLE EVENEMENT
   ADD CONSTRAINT EVE_CHK_SOUS_TYPE_CIBLE
      CHECK (SOUS_TYPE_CIBLE IN (/* Oracle */ 'OR', /* Microsoft SQL */ 'MS', /* MySQL */ 'MY'));

ALTER TABLE EVENEMENT
   ADD CONSTRAINT EVE_CHK_TYPE_EVENEMENT
      CHECK (TYPE_EVENEMENT IN (/* Moniteur */ 'MN',/* Agent */ 'AG',/* Collecte */ 'CD'));

ALTER TABLE EVENEMENT
   ADD CONSTRAINT EVE_CHK_TYPE_FERMETURE
      CHECK (TYPE_FERMETURE IN (/* Résolution */ 'RE',/* Automatique */ 'AU'));

ALTER TABLE EVENEMENT
   ADD CONSTRAINT EVE_CHK_VISIBLE
      CHECK (VISIBLE IN (/* Actif */ 'AC',/* Inactif */ 'IN'));


ALTER TABLE EVENEMENT
   ADD CONSTRAINT EVE_PK_EVENEMENT PRIMARY KEY (TYPE_CIBLE, SOUS_TYPE_CIBLE, NOM_EVENEMENT)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE EVENEMENT_DEFAUT_TRADUCTION
(
   TYPE_CIBLE           CHAR(2 CHAR)         DEFAULT 'BD'  NOT NULL
  ,SOUS_TYPE_CIBLE      CHAR(2 CHAR)         DEFAULT 'OR'  NOT NULL
  ,NOM_EVENEMENT        VARCHAR2(100 CHAR)                 NOT NULL
  ,CHAINE_FR            VARCHAR2(4000 CHAR)                NOT NULL
  ,CHAINE_AN            VARCHAR2(4000 CHAR)                NOT NULL
  ,COMMENTAIRE_FR       VARCHAR2(1000 CHAR)
  ,COMMENTAIRE_AN       VARCHAR2(1000 CHAR)
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE EVENEMENT_DEFAUT_TRADUCTION
   ADD CONSTRAINT EVEDT_PK_EVENEMENT PRIMARY KEY (TYPE_CIBLE, SOUS_TYPE_CIBLE, NOM_EVENEMENT, CHAINE_FR)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE DESTI_NOTIF_SURCHARGE_MESSAGE
(
   TYPE_CIBLE           CHAR(2 CHAR)         DEFAULT 'BD'     NOT NULL
  ,SOUS_TYPE_CIBLE      CHAR(2 CHAR)         DEFAULT 'OR'     NOT NULL
  ,NOM_EVENEMENT        VARCHAR2(100 CHAR)   DEFAULT 'ALERT'  NOT NULL
  ,SEQ_SURCHARGE        NUMBER(2)                             NOT NULL
  ,DESC_SURCHARGE       VARCHAR2(100 CHAR)                    NOT NULL
  ,MESSAGE              VARCHAR2(1000 CHAR)                   NOT NULL
  ,DESTI_NOTIF          VARCHAR2(30 CHAR)                     NOT NULL
  ,COMMENTAIRE          VARCHAR2(1000 CHAR)
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE DESTI_NOTIF_SURCHARGE_MESSAGE
   ADD CONSTRAINT DNSM_CHK_TYPE_CIBLE
      CHECK (TYPE_CIBLE IN (/* Base de données */ 'BD'));

ALTER TABLE DESTI_NOTIF_SURCHARGE_MESSAGE
   ADD CONSTRAINT DNSM_CHK_SOUS_TYPE_CIBLE
      CHECK (SOUS_TYPE_CIBLE IN (/* Oracle */ 'OR', /* Microsoft SQL */ 'MS', /* MySQL */ 'MY'));


ALTER TABLE DESTI_NOTIF_SURCHARGE_MESSAGE
   ADD CONSTRAINT DNSM_PK_DESTI_NOTIF_SUR_MESS PRIMARY KEY (TYPE_CIBLE, SOUS_TYPE_CIBLE, NOM_EVENEMENT, SEQ_SURCHARGE)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE EVENEMENT_CIBLE
(
   TYPE_CIBLE           CHAR(2 CHAR)        DEFAULT 'BD'                             NOT NULL
  ,SOUS_TYPE_CIBLE      CHAR(2 CHAR)        DEFAULT 'OR'                             NOT NULL
  ,NOM_CIBLE            VARCHAR2(30 CHAR)                                            NOT NULL
  ,NOM_EVENEMENT        VARCHAR2(100 CHAR)                                           NOT NULL
  ,VERIFICATION         CHAR(2 CHAR)        DEFAULT 'AC'                             NOT NULL
  ,DH_PROCHAINE_VERIF   DATE                DEFAULT SYSDATE                          NOT NULL
  ,DH_LOC_DERN_VERIF    DATE                DEFAULT SYSDATE                          NOT NULL
  ,TS_UTC_DERN_VERIF    TIMESTAMP           DEFAULT SYSTIMESTAMP AT TIME ZONE 'UTC'  NOT NULL
  ,INTERVAL             VARCHAR2(500 CHAR)
  ,DESTI_NOTIF          VARCHAR2(30 CHAR)
  ,NB_ERREUR            NUMBER
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE EVENEMENT_CIBLE
   ADD CONSTRAINT EVC_CHK_TYPE_CIBLE
      CHECK (TYPE_CIBLE IN (/* Base de données */ 'BD'));

ALTER TABLE EVENEMENT_CIBLE
   ADD CONSTRAINT EVC_CHK_SOUS_TYPE_CIBLE
      CHECK (SOUS_TYPE_CIBLE IN (/* Oracle */ 'OR', /* Microsoft SQL */ 'MS', /* MySQL */ 'MY'));

ALTER TABLE EVENEMENT_CIBLE
   ADD CONSTRAINT EVC_CHK_VERIFICATION
      CHECK (VERIFICATION  IN (/* Activée */ 'AC',/* Inactif */ 'IN'));


ALTER TABLE EVENEMENT_CIBLE
   ADD CONSTRAINT EVC_PK_EVENEMENT_CIBLE PRIMARY KEY (TYPE_CIBLE, SOUS_TYPE_CIBLE, NOM_CIBLE, NOM_EVENEMENT)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE HIST_EVENEMENT_CIBLE
(
   DH_HIST_EVENEMENT    DATE                 DEFAULT SYSDATE  NOT NULL
  ,TYPE_CIBLE           CHAR(2 CHAR)         DEFAULT 'BD'     NOT NULL
  ,NOM_CIBLE            VARCHAR2(30 CHAR)                     NOT NULL
  ,NOM_EVENEMENT        VARCHAR2(100 CHAR)                    NOT NULL
  ,NOM_OBJET            VARCHAR2(100 CHAR)                    NOT NULL
  ,RESULTAT             VARCHAR2(4000 CHAR)                   NOT NULL
  ,STATUT               CHAR(2 CHAR)         DEFAULT 'AT'     NOT NULL
  ,DH_DERN_OCCURRENCE   DATE                 DEFAULT SYSDATE  NOT NULL
  ,DH_FERMETURE         DATE
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE HIST_EVENEMENT_CIBLE
   ADD CONSTRAINT HEC_CHK_TYPE_CIBLE
      CHECK (TYPE_CIBLE IN (/* Base de données */ 'BD'));

ALTER TABLE HIST_EVENEMENT_CIBLE
   ADD CONSTRAINT HEC_CHK_STATUT
      CHECK (STATUT IN (/* À traiter */ 'AT',/* À notifier */ 'AE',/* Final */ 'OK'));


ALTER TABLE HIST_EVENEMENT_CIBLE
   ADD CONSTRAINT HEC_PK_HIST_EVENEMENT_CIBLE PRIMARY KEY (DH_HIST_EVENEMENT, TYPE_CIBLE, NOM_CIBLE, NOM_EVENEMENT, NOM_OBJET)
      USING INDEX
      TABLESPACE SDBM_DATA;

CREATE INDEX HEC_DH_FERMETURE ON HIST_EVENEMENT_CIBLE (TYPE_CIBLE, NOM_CIBLE, NOM_EVENEMENT, DH_FERMETURE)
   TABLESPACE SDBM_DATA;



CREATE TABLE REPARATION
(
   TYPE_CIBLE           CHAR(2 CHAR)         DEFAULT 'BD'  NOT NULL
  ,SOUS_TYPE_CIBLE      CHAR(2 CHAR)         DEFAULT 'OR'  NOT NULL
  ,NOM_EVENEMENT        VARCHAR2(100 CHAR)                 NOT NULL
  ,NOM_REPARATION       VARCHAR2(100 CHAR)                 NOT NULL
  ,COMMANDE             VARCHAR2(4000 CHAR)                NOT NULL
  ,COMMENTAIRE          VARCHAR2(1000 CHAR)
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE REPARATION
   ADD CONSTRAINT REP_CHK_TYPE_CIBLE
      CHECK (TYPE_CIBLE IN (/* Base de données */ 'BD'));

ALTER TABLE REPARATION
   ADD CONSTRAINT REP_CHK_SOUS_TYPE_CIBLE
      CHECK (SOUS_TYPE_CIBLE IN (/* Oracle */ 'OR', /* Microsoft SQL */ 'MS', /* MySQL */ 'MY'));


ALTER TABLE REPARATION
   ADD CONSTRAINT REP_PK_EVENEMENT PRIMARY KEY (TYPE_CIBLE, SOUS_TYPE_CIBLE, NOM_EVENEMENT, NOM_REPARATION)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE REPARATION_EVEN_CIBLE
(
   TYPE_CIBLE           CHAR(2 CHAR)        DEFAULT 'BD'  NOT NULL
  ,SOUS_TYPE_CIBLE      CHAR(2 CHAR)        DEFAULT 'OR'  NOT NULL
  ,NOM_CIBLE            VARCHAR2(30 CHAR)                 NOT NULL
  ,NOM_EVENEMENT        VARCHAR2(100 CHAR)                NOT NULL
  ,NOM_REPARATION       VARCHAR2(100 CHAR)                NOT NULL
  ,STATUT               CHAR(2 CHAR)        DEFAULT 'OK'  NOT NULL
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE REPARATION_EVEN_CIBLE
   ADD CONSTRAINT REC_CHK_TYPE_CIBLE
      CHECK (TYPE_CIBLE IN (/* Base de données */ 'BD'));

ALTER TABLE REPARATION_EVEN_CIBLE
   ADD CONSTRAINT REC_CHK_SOUS_TYPE_CIBLE
      CHECK (SOUS_TYPE_CIBLE IN (/* Oracle */ 'OR', /* Microsoft SQL */ 'MS', /* MySQL */ 'MY'));

ALTER TABLE REPARATION_EVEN_CIBLE
   ADD CONSTRAINT REC_CHK_STATUT
      CHECK (STATUT IN (/* À traiter */ 'AT',/* Final */ 'OK'));


ALTER TABLE REPARATION_EVEN_CIBLE
   ADD CONSTRAINT REC_PK_EVENEMENT_CIBLE PRIMARY KEY (TYPE_CIBLE, SOUS_TYPE_CIBLE, NOM_CIBLE, NOM_EVENEMENT, NOM_REPARATION)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE HIST_REPARATION_EVEN_CIBLE
(
   DH_HIST_REPARATION   DATE                DEFAULT SYSDATE  NOT NULL
  ,TYPE_CIBLE           CHAR(2 CHAR)        DEFAULT 'BD'     NOT NULL
  ,NOM_CIBLE            VARCHAR2(30 CHAR)                    NOT NULL
  ,NOM_EVENEMENT        VARCHAR2(100 CHAR)                   NOT NULL
  ,NOM_REPARATION       VARCHAR2(100 CHAR)                   NOT NULL
  ,STATUT               CHAR(2 CHAR)                         NOT NULL
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE HIST_REPARATION_EVEN_CIBLE
   ADD CONSTRAINT HRE_CHK_TYPE_CIBLE
      CHECK (TYPE_CIBLE IN (/* Base de données */ 'BD'));

ALTER TABLE HIST_REPARATION_EVEN_CIBLE
   ADD CONSTRAINT HRE_CHK_STATUT
      CHECK (STATUT IN (/* Erreur */ 'ER',/* Succès */ 'OK'));


ALTER TABLE HIST_REPARATION_EVEN_CIBLE
   ADD CONSTRAINT HRE_PK_HIST_EVENEMENT_CIBLE PRIMARY KEY (DH_HIST_REPARATION, TYPE_CIBLE, NOM_CIBLE, NOM_EVENEMENT)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE VOLUME_PHY
(
   ID_VOLUME_PHY        NUMBER(6)                            NOT NULL
  ,DESC_VOLUME_PHY      VARCHAR2(100 CHAR)                   NOT NULL
  ,TOTAL_MB             NUMBER(8)                            NOT NULL
  ,FREE_MB              NUMBER(8)           DEFAULT -1       NOT NULL
  ,DH_DERN_MAJ          DATE                DEFAULT SYSDATE  NOT NULL
  ,MAJ_CD_AUTORISE      CHAR(2 CHAR)        DEFAULT 'FA'     NOT NULL
  ,CHEMIN_ACCES_DEFAUT  VARCHAR2(512 CHAR)                   NOT NULL
  ,STATUT               CHAR(2 CHAR)        DEFAULT 'AC'     NOT NULL
  ,COMMENTAIRE          VARCHAR2(500 CHAR)
  ,NOM_CIBLE_DERN_MAJ   VARCHAR2(30 CHAR)
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE VOLUME_PHY
   ADD CONSTRAINT VP_CHK_STATUT
      CHECK (STATUT IN (/* Actif */ 'AC',/* Inactif */ 'IN'));

ALTER TABLE VOLUME_PHY
   ADD CONSTRAINT VP_CHK_MAJ_CD_AUTORISE
      CHECK (MAJ_CD_AUTORISE IN (/* Vrai */ 'VR',/* Faux */ 'FA'));


ALTER TABLE VOLUME_PHY
   ADD CONSTRAINT VP_PK_VOLUME_PHY PRIMARY KEY (ID_VOLUME_PHY)
      USING INDEX
      TABLESPACE SDBM_DATA;


INSERT INTO VOLUME_PHY
(
   ID_VOLUME_PHY
  ,DESC_VOLUME_PHY
  ,TOTAL_MB
  ,CHEMIN_ACCES_DEFAUT
  ,STATUT
)
VALUES
(
   0
  ,'N/D'
  ,0
  ,'N/D'
  ,'IN'
);



CREATE TABLE VOLUME_PHY_CIBLE
(
   ID_VOLUME_PHY        NUMBER(6)           NOT NULL
  ,TYPE_CIBLE           CHAR(2 CHAR)        NOT NULL
  ,NOM_CIBLE            VARCHAR2(30 CHAR)   NOT NULL
  ,CHEMIN_ACCES         VARCHAR2(512 CHAR)  NOT NULL
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE VOLUME_PHY_CIBLE
   ADD CONSTRAINT VPC_PK_CIBLE_VOLUME_PHY PRIMARY KEY (ID_VOLUME_PHY, TYPE_CIBLE, NOM_CIBLE, CHEMIN_ACCES)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE HIST_EVENEMENT_CIBLE_AGT
(
   DH_HIST_EVENEMENT    DATE                 DEFAULT SYSDATE  NOT NULL
  ,TYPE_CIBLE           CHAR(2 CHAR)         DEFAULT 'BD'     NOT NULL
  ,NOM_CIBLE            VARCHAR2(30 CHAR)                     NOT NULL
  ,NOM_EVENEMENT        VARCHAR2(100 CHAR)                    NOT NULL
  ,TEXTE                VARCHAR2(4000 CHAR)                   NOT NULL
  ,STATUT               CHAR(2 CHAR)         DEFAULT 'AE'     NOT NULL
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE HIST_EVENEMENT_CIBLE_AGT
   ADD CONSTRAINT HECA_CHK_TYPE_CIBLE
      CHECK (TYPE_CIBLE IN (/* Base de données */ 'BD'));

ALTER TABLE HIST_EVENEMENT_CIBLE_AGT
   ADD CONSTRAINT HECA_CHK_STATUT
      CHECK (STATUT IN (/* À notifier */ 'AE',/* Final */ 'OK'));

CREATE INDEX HECA_DH_HIST_TYP_CIB_NOM_CIB ON HIST_EVENEMENT_CIBLE_AGT (DH_HIST_EVENEMENT, TYPE_CIBLE, NOM_CIBLE)
   TABLESPACE SDBM_DATA;

CREATE INDEX HECA_STATUT ON HIST_EVENEMENT_CIBLE_AGT (STATUT)
   TABLESPACE SDBM_DATA;



CREATE TABLE INFO_AGT
(
   NOM_SERVEUR          VARCHAR2(64 CHAR)   NOT NULL
  ,NOM_OS               VARCHAR2(100 CHAR)  NOT NULL
  ,USAGER_EXECUTION     VARCHAR2(256 CHAR)  NOT NULL
  ,STATUT_TACHE         CHAR(2 CHAR)        NOT NULL
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE INFO_AGT
   ADD CONSTRAINT IAG_PK_INFO_AGT PRIMARY KEY (NOM_SERVEUR)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE INFO_DET_INT_AGT
(
   NOM_SERVEUR          VARCHAR2(64 CHAR)  NOT NULL
  ,INTERPRETEUR         VARCHAR2(50 CHAR)  NOT NULL
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE INFO_DET_INT_AGT
   ADD CONSTRAINT IDIG_PK_INFO_DET_INT_AGT PRIMARY KEY (NOM_SERVEUR, INTERPRETEUR)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE TACHE_AGT
(
   NOM_SERVEUR             VARCHAR2(64 CHAR)                        NOT NULL
  ,NOM_TACHE               VARCHAR2(50 CHAR)                        NOT NULL
  ,EXECUTABLE              VARCHAR2(256 CHAR)                       NOT NULL
  ,PARAMETRE               VARCHAR2(1000 CHAR)                      NOT NULL
  ,REPERTOIRE              VARCHAR2(256 CHAR)                       NOT NULL
  ,REPERTOIRE_JOURNAL      VARCHAR2(256 CHAR)                       NOT NULL
  ,EXECUTION               CHAR(2 CHAR)         DEFAULT 'AC'        NOT NULL
  ,TYPE_NOTIF              CHAR(2 CHAR)         DEFAULT 'OF'        NOT NULL
  ,TYPE_NOTIF_JOURNAL      CHAR(2 CHAR)         DEFAULT 'OF'        NOT NULL
  ,DESTI_NOTIF             VARCHAR2(30 CHAR)                        NOT NULL
  ,INTERVAL                VARCHAR2(500 CHAR)                       NOT NULL
  ,DELAI_AVERTISSEMENT     NUMBER(4)                                NOT NULL
  ,DH_PROCHAINE_EXEC       DATE                 DEFAULT SYSDATE     NOT NULL
  ,CODE_RETOUR_SUCCES      VARCHAR2(100 CHAR)   DEFAULT '{RC} = 0'  NOT NULL
  ,COMMENTAIRE             VARCHAR2(1000 CHAR)
  ,TYPE_NOTIF_OPT          CHAR(2 CHAR)
  ,TYPE_NOTIF_JOURNAL_OPT  CHAR(2 CHAR)
  ,DESTI_NOTIF_OPT         VARCHAR2(30 CHAR)
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE TACHE_AGT
   ADD CONSTRAINT TAC_CHK_EXECUTION
      CHECK (EXECUTION IN (/* Actif */ 'AC',/* Inactif */ 'IN'));

ALTER TABLE TACHE_AGT
   ADD CONSTRAINT TAC_CHK_TYPE_NOTIF
      CHECK (TYPE_NOTIF IN (/* Sur erreur */ 'OF', /* Toujours */ 'AL'));

ALTER TABLE TACHE_AGT
   ADD CONSTRAINT TAC_CHK_TYPE_NOTIF_JOURNAL
      CHECK (TYPE_NOTIF_JOURNAL IN (/* Sur erreur */ 'OF',/* Vrai */ 'VR',/* Faux */ 'FA'));

ALTER TABLE TACHE_AGT
   ADD CONSTRAINT TAC_CHK_TYPE_NOTIF_OPT
      CHECK (TYPE_NOTIF_OPT IN (/* Sur erreur */ 'OF', /* Toujours */ 'AL'));

ALTER TABLE TACHE_AGT
   ADD CONSTRAINT TAC_CHK_TYPE_NOTIF_JOURNAL_OPT
      CHECK (TYPE_NOTIF_JOURNAL_OPT IN (/* Sur erreur */ 'OF',/* Vrai */ 'VR',/* Faux */ 'FA'));


ALTER TABLE TACHE_AGT
   ADD CONSTRAINT TAC_PK_TACHE_AGT PRIMARY KEY (NOM_SERVEUR, NOM_TACHE)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE TACHE_DET_MSG_AGT
(
   NOM_SERVEUR          VARCHAR2(64 CHAR)                  NOT NULL
  ,NOM_TACHE            VARCHAR2(50 CHAR)                  NOT NULL
  ,TYPE_MSG             CHAR(2 CHAR)         DEFAULT 'OK'  NOT NULL
  ,MSG                  VARCHAR2(512 CHAR)                 NOT NULL
  ,COMMENTAIRE          VARCHAR2(1000 CHAR)
)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE TACHE_DET_MSG_AGT
   ADD CONSTRAINT TDMA_CHK_TYPE_MESSAGE
      CHECK (TYPE_MSG IN (/* Massage à trouver */ 'OK', /* Message à ne pas trouver */ 'ER'));


CREATE INDEX TDMA_FK_TACHE_AGT ON TACHE_DET_MSG_AGT (NOM_SERVEUR, NOM_TACHE)
   TABLESPACE SDBM_DATA;



CREATE TABLE HIST_TACHE_AGT
(
   ID_SOUMISSION          NUMBER(10)                        NOT NULL
  ,NOM_SERVEUR            VARCHAR2(64 CHAR)                 NOT NULL
  ,NOM_TACHE              VARCHAR2(50 CHAR)                 NOT NULL
  ,FICHIER_JOURNAL        VARCHAR2(256 CHAR)
  ,STATUT_EXEC            CHAR(2 CHAR)                      NOT NULL
  ,STATUT_NOTIF_AVER      CHAR(2 CHAR)        DEFAULT 'NO'  NOT NULL
  ,STATUT_NOTIF_EXEC      CHAR(2 CHAR)        DEFAULT 'NO'  NOT NULL
  ,STATUT_NOTIF_EXEC_OPT  CHAR(2 CHAR)        DEFAULT 'NO'  NOT NULL
  ,DH_SOUMISSION          DATE                              NOT NULL
  ,DH_DEBUT               DATE
  ,DH_FIN                 DATE
  ,CODE_RETOUR            NUMBER
  ,JOURNAL                CLOB
  ,EVALUATION             VARCHAR2(512 CHAR)
)
LOB (JOURNAL) STORE AS (DISABLE STORAGE IN ROW)
TABLESPACE SDBM_DATA
MONITORING;


ALTER TABLE HIST_TACHE_AGT
   ADD CONSTRAINT HTA_CHK_STATUT_EXEC
      CHECK (STATUT_EXEC IN (/* Soumission */ 'SB',/* Soumission reçu */ 'SR',/* Erreur à la soumission */ 'SF',/* Exécution */ 'EX',/* Incomplet */ 'NC',/* Évaluation */ 'EV',/* Fin en erreur */ 'ER',/* Fin avec succès */ 'OK'));

ALTER TABLE HIST_TACHE_AGT
   ADD CONSTRAINT HTA_CHK_STATUT_NOTIF_AVER
      CHECK (STATUT_NOTIF_AVER IN (/* Normal */ 'NO',/* À notifier */ 'AE',/* Final */ 'OK'));

ALTER TABLE HIST_TACHE_AGT
   ADD CONSTRAINT HTA_CHK_STATUT_NOTIF_EXEC
      CHECK (STATUT_NOTIF_EXEC IN (/* Normal */ 'NO',/* À notifier */ 'AE',/* Final */ 'OK'));

ALTER TABLE HIST_TACHE_AGT
   ADD CONSTRAINT HTA_CHK_STATUT_NOTIF_EXEC_OPT
      CHECK (STATUT_NOTIF_EXEC_OPT IN (/* Normal */ 'NO',/* À notifier */ 'AE',/* Final */ 'OK'));


CREATE INDEX HTA_IE_NOM_SERVEUR_NOM_TACHE ON HIST_TACHE_AGT (NOM_SERVEUR, NOM_TACHE)
   TABLESPACE SDBM_DATA;

ALTER TABLE HIST_TACHE_AGT
   ADD CONSTRAINT HTA_PK_HIST_TACHE_AGT PRIMARY KEY (ID_SOUMISSION)
      USING INDEX
      TABLESPACE SDBM_DATA;



CREATE TABLE NOTIF_DIF
(
   DH_NOTIFICATION      DATE                 DEFAULT SYSDATE  NOT NULL
  ,DH_ENVOI_CALC        DATE                                  NOT NULL      
  ,TYPE_CIBLE           CHAR(2 CHAR)                          NOT NULL      
  ,NOM_CIBLE            VARCHAR2(30 CHAR)                     NOT NULL 
  ,DESTI_NOTIF          VARCHAR2(30 CHAR)                     NOT NULL    
  ,TYPE_NOTIF           VARCHAR2(30 CHAR)                     NOT NULL
  ,ADRESSE              VARCHAR2(100 CHAR)                    NOT NULL
  ,NOM_EVENEMENT        VARCHAR2(100 CHAR)
  ,NOM_OBJET            VARCHAR2(100 CHAR)
  ,ENTETE               VARCHAR2(4000 CHAR)
  ,MESSAGE              CLOB
  ,NOM_FICHIER          VARCHAR2(256 CHAR)
  ,BLB_FICHIER          BLOB
  ,DH_ENVOI             DATE
)
LOB (MESSAGE)     STORE AS (DISABLE STORAGE IN ROW)
LOB (BLB_FICHIER) STORE AS (DISABLE STORAGE IN ROW)
TABLESPACE SDBM_DATA
MONITORING;




--
-- RELATIONS
--
ALTER TABLE DESTI_NOTIF_DETAIL
   ADD CONSTRAINT DND_FK_DESTI_NOTIF
       FOREIGN KEY (DESTI_NOTIF) REFERENCES DESTI_NOTIF
       ON DELETE CASCADE;

ALTER TABLE DESTI_NOTIF_DETAIL
   ADD CONSTRAINT DND_FK_TYPE_NOTIF
       FOREIGN KEY (TYPE_NOTIF) REFERENCES PARAMETRE_NOTIF_EXT;

ALTER TABLE CIBLE
   ADD CONSTRAINT CIB_FK_DESTI_NOTIF
       FOREIGN KEY (DESTI_NOTIF) REFERENCES DESTI_NOTIF;

ALTER TABLE SDBM.CIBLE
   ADD CONSTRAINT CIB_FK_CIBLE
       FOREIGN KEY (TYPE_CIBLE_REF, NOM_CIBLE_REF) REFERENCES SDBM.CIBLE (TYPE_CIBLE, NOM_CIBLE);

ALTER TABLE EVENEMENT
   ADD CONSTRAINT EVE_FK_DESTI_NOTIF
       FOREIGN KEY (DESTI_NOTIF_DEFAUT) REFERENCES DESTI_NOTIF;

ALTER TABLE DESTI_NOTIF_SURCHARGE_MESSAGE
   ADD CONSTRAINT DNSM_FK_EVENEMENT
       FOREIGN KEY (TYPE_CIBLE, SOUS_TYPE_CIBLE, NOM_EVENEMENT) REFERENCES EVENEMENT
       ON DELETE CASCADE;

ALTER TABLE EVENEMENT_CIBLE
   ADD CONSTRAINT EVC_FK_CIBLE
       FOREIGN KEY (TYPE_CIBLE, SOUS_TYPE_CIBLE, NOM_CIBLE) REFERENCES CIBLE (TYPE_CIBLE, SOUS_TYPE_CIBLE, NOM_CIBLE)
       ON DELETE CASCADE;

ALTER TABLE EVENEMENT_CIBLE
   ADD CONSTRAINT EVC_FK_DESTI_NOTIF
       FOREIGN KEY (DESTI_NOTIF) REFERENCES DESTI_NOTIF;

ALTER TABLE EVENEMENT_CIBLE
   ADD CONSTRAINT EVC_FK_EVENEMENT
       FOREIGN KEY (TYPE_CIBLE, SOUS_TYPE_CIBLE, NOM_EVENEMENT) REFERENCES EVENEMENT
       ON DELETE CASCADE;

ALTER TABLE REPARATION
   ADD CONSTRAINT REP_FK_EVENEMENT
       FOREIGN KEY (TYPE_CIBLE, SOUS_TYPE_CIBLE, NOM_EVENEMENT) REFERENCES EVENEMENT
       ON DELETE CASCADE;

ALTER TABLE REPARATION_EVEN_CIBLE
   ADD CONSTRAINT REC_FK_EVENEMENT_CIBLE
       FOREIGN KEY (TYPE_CIBLE, SOUS_TYPE_CIBLE, NOM_CIBLE, NOM_EVENEMENT) REFERENCES EVENEMENT_CIBLE
       ON DELETE CASCADE;

ALTER TABLE REPARATION_EVEN_CIBLE
   ADD CONSTRAINT REC_FK_REPARATION
       FOREIGN KEY (TYPE_CIBLE, SOUS_TYPE_CIBLE, NOM_EVENEMENT, NOM_REPARATION) REFERENCES REPARATION;

ALTER TABLE VOLUME_PHY_CIBLE
   ADD CONSTRAINT VPC_FK_VOLUME_PHY
       FOREIGN KEY (ID_VOLUME_PHY) REFERENCES VOLUME_PHY
       ON DELETE CASCADE;

ALTER TABLE VOLUME_PHY_CIBLE
   ADD CONSTRAINT VPC_FK_CIBLE
       FOREIGN KEY (TYPE_CIBLE, NOM_CIBLE) REFERENCES CIBLE
       ON DELETE CASCADE;

ALTER TABLE INFO_DET_INT_AGT
   ADD CONSTRAINT IDIG_FK_INFO_AGT
       FOREIGN KEY (NOM_SERVEUR) REFERENCES INFO_AGT
       ON DELETE CASCADE;

ALTER TABLE TACHE_AGT
   ADD CONSTRAINT TAC_FK_DESTI_NOTIF
       FOREIGN KEY (DESTI_NOTIF) REFERENCES DESTI_NOTIF;

ALTER TABLE TACHE_AGT
   ADD CONSTRAINT TAC_FK_DESTI_NOTIF_OPT
       FOREIGN KEY (DESTI_NOTIF_OPT) REFERENCES DESTI_NOTIF;
       
ALTER TABLE TACHE_DET_MSG_AGT
   ADD CONSTRAINT TDMA_FK_TACHE_AGT
       FOREIGN KEY (NOM_SERVEUR, NOM_TACHE) REFERENCES TACHE_AGT
       ON DELETE CASCADE;

ALTER TABLE HIST_TACHE_AGT
   ADD CONSTRAINT HTA_FK_TACHE_AGT
       FOREIGN KEY (NOM_SERVEUR, NOM_TACHE) REFERENCES TACHE_AGT
       ON DELETE CASCADE;




-- Table de journalisation système
CREATE TABLE JOURNAL
(
   ID_JOURNAL          NUMBER(10)                                 NOT NULL
  ,DH_JOURNAL          TIMESTAMP            DEFAULT SYSTIMESTAMP  NOT NULL
  ,NIVEAU              VARCHAR2(10 CHAR)                          NOT NULL
  ,SOURCE              VARCHAR2(100 CHAR)                         NOT NULL
  ,TEXTE               VARCHAR2(4000 CHAR)                        NOT NULL
)   
TABLESPACE SDBM_DATA
MONITORING;


CREATE INDEX JOU_IE_DH_JOURNAL ON JOURNAL (DH_JOURNAL)
   TABLESPACE SDBM_DATA;

ALTER TABLE JOURNAL
   ADD CONSTRAINT JOU_PK_JOURNAL PRIMARY KEY (ID_JOURNAL)
      USING INDEX
      TABLESPACE SDBM_DATA;


-- Table de sécurité APEX
CREATE TABLE USAGER
(
   NOM_USAGER        VARCHAR2(30 CHAR)                     NOT NULL
  ,MOT_PASSE         VARCHAR2(40 CHAR)                     NOT NULL
  ,NOM_COMPLET       VARCHAR2(100 CHAR)
  ,COMMENTAIRE       VARCHAR2(500 CHAR)
  ,NIVEAU_SEC        VARCHAR2(30 CHAR)                     NOT NULL
  ,DH_CREATION       DATE                DEFAULT SYSDATE   NOT NULL
  ,USAGER_CREATION   VARCHAR2(30 CHAR)   DEFAULT 'SYSTEM'  NOT NULL
  ,DH_DERN_MODIF     DATE
  ,USAGER_DERN_MODIF VARCHAR2(30 CHAR)
  ,DH_DERN_CONNEXION DATE
  ,AUTH_EXT          CHAR(2 CHAR)        DEFAULT 'FA'      NOT NULL
  ,USAGER_EXT        VARCHAR2(100 CHAR)
)
TABLESPACE SDBM_DATA;


ALTER TABLE USAGER
   ADD CONSTRAINT USA_PK_NOM_USAGER PRIMARY KEY (NOM_USAGER)
      USING INDEX
         TABLESPACE SDBM_DATA;



-- Collecte de données
CREATE TABLE CD_DBA_DATA_FILES
(
   DH_COLLECTE_DONNEE  DATE
  ,NOM_CIBLE           VARCHAR2(30 CHAR)
  ,FILE_NAME           VARCHAR2(513 CHAR)
  ,FILE_ID             NUMBER
  ,TABLESPACE_NAME     VARCHAR2(257 CHAR)
  ,BYTES               NUMBER
  ,BYTES_FREE          NUMBER
  ,ID_VOLUME_PHY       NUMBER(6)           DEFAULT 0  NOT NULL
)   
TABLESPACE SDBM_DATA
MONITORING;

ALTER TABLE CD_DBA_DATA_FILES
   ADD CONSTRAINT CDDDF_PK_CD_DBA_DATA_FILES PRIMARY KEY (DH_COLLECTE_DONNEE, NOM_CIBLE, FILE_NAME)
      USING INDEX
      TABLESPACE SDBM_DATA;

ALTER TABLE CD_DBA_DATA_FILES
   ADD CONSTRAINT CDDDF_UK_CD_DBA_DATA_FILES UNIQUE (DH_COLLECTE_DONNEE, NOM_CIBLE, FILE_ID)
      USING INDEX
      TABLESPACE SDBM_DATA;

CREATE INDEX CDDDF_IE_NOM_CIB_FILE_ID_NAME ON CD_DBA_DATA_FILES (NOM_CIBLE, FILE_ID, FILE_NAME)
   TABLESPACE SDBM_DATA;


CREATE TABLE CD_ESPACE_ARCHIVED_LOG
(
   DH_COLLECTE_DONNEE  DATE
  ,NOM_CIBLE           VARCHAR2(30 CHAR)
  ,ESPACE              NUMBER
)
TABLESPACE SDBM_DATA
MONITORING;

ALTER TABLE CD_ESPACE_ARCHIVED_LOG
   ADD CONSTRAINT CDEAL_PK_CD_ESP_ARCHIVED_LOG PRIMARY KEY (DH_COLLECTE_DONNEE, NOM_CIBLE)
      USING INDEX
      TABLESPACE SDBM_DATA;


CREATE TABLE CD_FILESTAT
(
   DH_COLLECTE_DONNEE  DATE
  ,NOM_CIBLE           VARCHAR2(30 CHAR)
  ,FILE#               NUMBER
  ,PHYRDS              NUMBER
  ,PHYWRTS             NUMBER
  ,PHYBLKRD            NUMBER
  ,PHYBLKWRT           NUMBER
  ,SINGLEBLKRDS        NUMBER
  ,READTIM             NUMBER
  ,WRITETIM            NUMBER
  ,SINGLEBLKRDTIM      NUMBER
  ,AVGIOTIM            NUMBER
  ,LSTIOTIM            NUMBER
  ,MINIOTIM            NUMBER
  ,MAXIORTM            NUMBER
  ,MAXIOWTM            NUMBER
  ,STARTUP_TIME        DATE
)
TABLESPACE SDBM_DATA
MONITORING;

ALTER TABLE CD_FILESTAT
   ADD CONSTRAINT CDFIS_PK_CD_FILESTAT PRIMARY KEY (DH_COLLECTE_DONNEE, NOM_CIBLE, FILE#)
      USING INDEX
      TABLESPACE SDBM_DATA;

CREATE INDEX CDFIS_IE_GENERER_IOSTAT ON CD_FILESTAT (NOM_CIBLE, FILE#, DH_COLLECTE_DONNEE)
   TABLESPACE SDBM_DATA;


CREATE TABLE CD_RAPPORT_IO_STAT
(
   NOM_CIBLE           VARCHAR2(30 CHAR)
  ,FILE#               NUMBER
  ,TYPE_RAPPORT        CHAR(2 CHAR)
  ,DH_PER_STAT_DEB     DATE
  ,DH_PER_STAT_FIN     DATE
  ,PHYRDS              NUMBER
  ,PHYWRTS             NUMBER
  ,STATUT              CHAR(2 CHAR)
)
TABLESPACE SDBM_DATA
MONITORING;

ALTER TABLE CD_RAPPORT_IO_STAT
   ADD CONSTRAINT IOS_PK_SDBM_IO_STAT PRIMARY KEY (NOM_CIBLE, FILE#, TYPE_RAPPORT, DH_PER_STAT_DEB)
      USING INDEX
      TABLESPACE SDBM_DATA;

CREATE INDEX IOS_IE_ACT_PAR_VOL ON CD_RAPPORT_IO_STAT (TYPE_RAPPORT, DH_PER_STAT_DEB, NOM_CIBLE)
   TABLESPACE SDBM_DATA;


CREATE TABLE CD_ASM_DISKGROUP
(
   DH_COLLECTE_DONNEE  DATE
  ,NOM_CIBLE           VARCHAR2(30 CHAR)
  ,HOST_NAME           VARCHAR2(64 CHAR)
  ,DISKGROUP_NAME      VARCHAR2(30 CHAR)
  ,TOTAL_MB            NUMBER
  ,FREE_MB             NUMBER
)
TABLESPACE SDBM_DATA
MONITORING;

ALTER TABLE CD_ASM_DISKGROUP
   ADD CONSTRAINT CDAD_PK_CD_ASM_DISKGROUP PRIMARY KEY (DH_COLLECTE_DONNEE, NOM_CIBLE, DISKGROUP_NAME)
      USING INDEX
      TABLESPACE SDBM_DATA;


CREATE TABLE CD_SYSSTAT_CPU
(
   DH_COLLECTE_DONNEE              DATE
  ,NOM_CIBLE                       VARCHAR2(30 CHAR)
  ,HOST_NAME                       VARCHAR2(64 CHAR)
  ,INSTANCE_NAME                   VARCHAR2(16 CHAR)
  ,STARTUP_TIME                    DATE
  ,CPU_USED_BY_SESSION             NUMBER
  ,CPU_RECURSIVE                   NUMBER
  ,CPU_PARSE_TIME                  NUMBER
  ,CPU_USED_BY_SESSION_C_DERN_PER  NUMBER
  ,CPU_RECURSIVE_C_DERN_PER        NUMBER
  ,CPU_PARSE_TIME_C_DERN_PER       NUMBER
)
TABLESPACE SDBM_DATA
MONITORING;

ALTER TABLE CD_SYSSTAT_CPU
   ADD CONSTRAINT CDSC_PK_CD_SYSSTAT_CPU PRIMARY KEY (DH_COLLECTE_DONNEE, NOM_CIBLE)
      USING INDEX
      TABLESPACE SDBM_DATA;


CREATE TABLE CD_TRANSACTION_LOG
(
   DH_COLLECTE_DONNEE  DATE
  ,NOM_CIBLE           VARCHAR2(30 CHAR)
  ,DATABASE_NAME       VARCHAR2(257 CHAR)
  ,RECOVERY_MODE       VARCHAR2(60 CHAR)
  ,TOTAL_SPACE         NUMBER
  ,USED_SPACE          NUMBER
  ,USED_SPACE_BACKUP   NUMBER
)
TABLESPACE SDBM_DATA
MONITORING;

ALTER TABLE CD_TRANSACTION_LOG
   ADD CONSTRAINT CDTL_PK_CD_TRANSACTION_LOG PRIMARY KEY (DH_COLLECTE_DONNEE, NOM_CIBLE, DATABASE_NAME)
      USING INDEX
      TABLESPACE SDBM_DATA;


CREATE TABLE CD_INFO_STATIQUE_AGT
(
   DH_COLLECTE_DONNEE  DATE
  ,NOM_SERVEUR         VARCHAR2(64 CHAR)
  ,SYS_UPTIME          NUMBER
  ,SYS_ARCH            VARCHAR2(50 CHAR)
  ,SYS_VENDOR          VARCHAR2(50 CHAR)
  ,SYS_DESCRIPTION     VARCHAR2(50 CHAR)
  ,SYS_VENDOR_NAME     VARCHAR2(50 CHAR)
  ,SYS_VENDOR_VERSION  VARCHAR2(50 CHAR)
  ,SYS_VERSION         VARCHAR2(50 CHAR)
  ,SYS_PATCH_LEVEL     VARCHAR2(50 CHAR)
  ,SYS_NB_CORE         NUMBER
  ,HAR_CPU_VENDOR      VARCHAR2(50 CHAR)
  ,HAR_CPU_MODEL       VARCHAR2(50 CHAR)
  ,HAR_CPU_CLOCK_MHZ   NUMBER
  ,HAR_RAM_SIZE        NUMBER
  ,COMMENTAIRE         VARCHAR2(1000 CHAR)
)
TABLESPACE SDBM_DATA
MONITORING;

ALTER TABLE CD_INFO_STATIQUE_AGT
   ADD CONSTRAINT ISA_PK_INFO_STATIQUE_AGT PRIMARY KEY (NOM_SERVEUR)
      USING INDEX
      TABLESPACE SDBM_DATA;


CREATE TABLE CD_INFO_DYNAMIQUE_AGT
(
   DH_COLLECTE_DONNEE      DATE
  ,NOM_SERVEUR             VARCHAR2(64 CHAR)
  ,TYPE_INFO               CHAR(2 CHAR)
  ,CPU_USER_TIME           NUMBER
  ,CPU_SYS_TIME            NUMBER
  ,CPU_NICE_TIME           NUMBER
  ,CPU_WAIT_TIME           NUMBER
  ,CPU_TOTAL_TIME          NUMBER
  ,CPU_IDLE_TIME           NUMBER
  ,MEM_TOTAL               NUMBER
  ,MEM_ACTUAL_USED         NUMBER
  ,MEM_ACTUAL_FREE         NUMBER
  ,MEM_USED                NUMBER
  ,MEM_FREE                NUMBER
  ,SWP_TOTAL               NUMBER
  ,SWP_USED                NUMBER
  ,SWP_FREE                NUMBER
  ,SWP_PAGE_IN             NUMBER
  ,SWP_PAGE_OUT            NUMBER
  ,SWP_DELTA_PAGE_IN       NUMBER
  ,SWP_DELTA_PAGE_OUT      NUMBER
  ,SYS_LOAD_AVG            NUMBER
  ,MAX_CPU_USER_TIME       NUMBER
  ,MAX_CPU_SYS_TIME        NUMBER
  ,MAX_CPU_NICE_TIME       NUMBER
  ,MAX_CPU_WAIT_TIME       NUMBER
  ,MAX_CPU_TOTAL_TIME      NUMBER
  ,MAX_MEM_ACTUAL_USED     NUMBER
  ,MAX_MEM_USED            NUMBER
  ,MAX_SWP_USED            NUMBER
  ,MAX_SWP_DELTA_PAGE_IN   NUMBER
  ,MAX_SWP_DELTA_PAGE_OUT  NUMBER
  ,MAX_SYS_LOAD_AVG        NUMBER
)
TABLESPACE SDBM_DATA
MONITORING;
  
ALTER TABLE CD_INFO_DYNAMIQUE_AGT
   ADD CONSTRAINT IDA_PK_INFO_DYNAMIQUE_AGT PRIMARY KEY (DH_COLLECTE_DONNEE, NOM_SERVEUR, TYPE_INFO)
      USING INDEX
      TABLESPACE SDBM_DATA;


CREATE TABLE CD_INFO_DYNAMIQUE_CPU_AGT
(
   DH_COLLECTE_DONNEE  DATE
  ,NOM_SERVEUR         VARCHAR2(64 CHAR)
  ,ID                  NUMBER(4)
  ,USER_TIME           NUMBER
  ,SYS_TIME            NUMBER
  ,NICE_TIME           NUMBER
  ,WAIT_TIME           NUMBER
  ,TOTAL_TIME          NUMBER
  ,IDLE_TIME           NUMBER
)
TABLESPACE SDBM_DATA
MONITORING;
  
ALTER TABLE CD_INFO_DYNAMIQUE_CPU_AGT
   ADD CONSTRAINT IDDA_PK_INFO_DYNAMIQUE_CPU_AGT PRIMARY KEY (DH_COLLECTE_DONNEE, NOM_SERVEUR, ID)
      USING INDEX
      TABLESPACE SDBM_DATA;



DISCONNECT
EXIT
