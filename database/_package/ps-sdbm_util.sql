-- *
-- * Copyright (c) 2008-2024 Benoit Bouthillier. All rights reserved.
-- * Licensed under the MIT license.
-- * See LICENSE file in the project root for full license information.
-- *


CREATE OR REPLACE PACKAGE SDBM_UTIL
IS
/*********************************************************************
*
* Copyright (c) 2008-2024 Benoit Bouthillier. All rights reserved.
* Licensed under the MIT license.
*
**********************************************************************/
/*********************************************************************
  PACKAGE : SDBM_UTIL
  AUTEUR  : Benoit Bouthillier 2008-07-23 (2022-01-15)
 ---------------------------------------------------------------------
  BUT : Ce package permet l'implantation des fonctions utilitaires.

**********************************************************************/


   PROCEDURE MAINTENANCE;

   PROCEDURE JOURNALISER
   (
      A_SOURCE IN JOURNAL.SOURCE%TYPE -- Source du message
     ,A_NIVEAU IN JOURNAL.NIVEAU%TYPE -- Niveau du message
     ,A_TEXTE  IN JOURNAL.TEXTE%TYPE  -- Texte du message
   );

   FUNCTION EVALUER_SQL_HORAIRE
   (
      A_SQL_HORAIRE IN DESTI_NOTIF.SQL_HORAIRE%TYPE
   )
   RETURN NUMBER;
   PRAGMA RESTRICT_REFERENCES(EVALUER_SQL_HORAIRE,WNDS,WNPS,TRUST);

   FUNCTION INTERVAL_TO_DATE
   (
      A_INTERVAL IN EVENEMENT_CIBLE.INTERVAL%TYPE
   )
   RETURN DATE;
   PRAGMA RESTRICT_REFERENCES(INTERVAL_TO_DATE,WNDS,WNPS,TRUST);

   FUNCTION DECRYPTER_MDP_CIBLE
   (
      A_NOM_CIBLE   IN CIBLE.NOM_CIBLE%TYPE
     ,A_MDP_ENC     IN CIBLE.MDP_USAGER%TYPE
   )
   RETURN VARCHAR2 RESULT_CACHE;
   PRAGMA RESTRICT_REFERENCES(DECRYPTER_MDP_CIBLE,WNDS,WNPS,TRUST);

   FUNCTION ENCRYPTER_MDP_CIBLE
   (
      A_NOM_CIBLE   IN CIBLE.NOM_CIBLE%TYPE
     ,A_MDP_CLAIR   IN CIBLE.MDP_USAGER%TYPE
   )
   RETURN VARCHAR2 RESULT_CACHE;
   PRAGMA RESTRICT_REFERENCES(ENCRYPTER_MDP_CIBLE,WNDS,WNPS,TRUST);

   FUNCTION DECRYPTER_MDP_SMTP
   (
      A_NOM_USAGER  IN PARAMETRE.NOM_USAGER_SMTP%TYPE
     ,A_MDP_ENC     IN PARAMETRE.MDP_USAGER_SMTP%TYPE
   )
   RETURN VARCHAR2 RESULT_CACHE;
   PRAGMA RESTRICT_REFERENCES(DECRYPTER_MDP_SMTP,WNDS,WNPS,TRUST);

   FUNCTION ENCRYPTER_MDP_SMTP
   (
      A_NOM_USAGER  IN PARAMETRE.NOM_USAGER_SMTP%TYPE
     ,A_MDP_CLAIR   IN PARAMETRE.MDP_USAGER_SMTP%TYPE
   )
   RETURN VARCHAR2 RESULT_CACHE;
   PRAGMA RESTRICT_REFERENCES(ENCRYPTER_MDP_SMTP,WNDS,WNPS,TRUST); 

   FUNCTION DECRYPTER_MDP_WALLET_SMTP
   (
      A_CHEMIN_WALLET_SMTP  IN PARAMETRE.CHEMIN_WALLET_SMTP%TYPE
     ,A_MDP_ENC             IN PARAMETRE.MDP_WALLET_SMTP%TYPE
   )
   RETURN VARCHAR2 RESULT_CACHE;
   PRAGMA RESTRICT_REFERENCES(DECRYPTER_MDP_WALLET_SMTP,WNDS,WNPS,TRUST);

   FUNCTION ENCRYPTER_MDP_WALLET_SMTP
   (
      A_CHEMIN_WALLET_SMTP  IN PARAMETRE.CHEMIN_WALLET_SMTP%TYPE
     ,A_MDP_CLAIR           IN PARAMETRE.MDP_WALLET_SMTP%TYPE
   )
   RETURN VARCHAR2 RESULT_CACHE;
   PRAGMA RESTRICT_REFERENCES(ENCRYPTER_MDP_WALLET_SMTP,WNDS,WNPS,TRUST); 

   FUNCTION NOTIFIER_CIBLE
   (
      A_TYPE_CIBLE  IN CIBLE.TYPE_CIBLE%TYPE
     ,A_NOM_CIBLE   IN CIBLE.NOM_CIBLE%TYPE
     ,A_STATUT      IN CIBLE.STATUT%TYPE
     ,A_DESTI_NOTIF IN CIBLE.DESTI_NOTIF%TYPE
   )
   RETURN BOOLEAN;

   FUNCTION NOTIFIER_EVENEMENT
   (
      A_TYPE_CIBLE    IN HIST_EVENEMENT_CIBLE.TYPE_CIBLE%TYPE
     ,A_NOM_CIBLE     IN HIST_EVENEMENT_CIBLE.NOM_CIBLE%TYPE
     ,A_NOM_EVENEMENT IN HIST_EVENEMENT_CIBLE.NOM_EVENEMENT%TYPE
     ,A_NOM_OBJET     IN HIST_EVENEMENT_CIBLE.NOM_OBJET%TYPE
     ,A_RESULTAT      IN HIST_EVENEMENT_CIBLE.RESULTAT%TYPE
     ,A_STATUT        IN CHAR
     ,A_DESTI_NOTIF   IN EVENEMENT_CIBLE.DESTI_NOTIF%TYPE
     ,A_NOM_FICHIER   IN VARCHAR2                                 DEFAULT NULL
     ,A_BLB_FICHIER   IN BLOB                                     DEFAULT NULL
   )
   RETURN BOOLEAN;

   PROCEDURE NOTIFIER_DIF;


END SDBM_UTIL;
/
