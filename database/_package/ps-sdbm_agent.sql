-- *
-- * Copyright (c) 2008-2024 Benoit Bouthillier. All rights reserved.
-- * Licensed under the MIT license.
-- * See LICENSE file in the project root for full license information.
-- *


CREATE OR REPLACE PACKAGE SDBM_AGENT
IS
/*********************************************************************
*
* Copyright (c) 2008-2024 Benoit Bouthillier. All rights reserved.
* Licensed under the MIT license.
*
**********************************************************************/
/*********************************************************************
  PACKAGE : SDBM_AGENT
  AUTEUR  : Benoit Bouthillier 2009-01-08 (2017-06-01)
 ---------------------------------------------------------------------
  BUT : Ce package permet l'implantation des fonctions de base SDBM
        (agent).

**********************************************************************/


   -- Version de l'entÃªte PL/SQL
   VERSION_PS CONSTANT VARCHAR2(4 CHAR) := '0.07';

   -- Constantes
   C_GROSSEUR_MAX_JOURNAL CONSTANT NUMBER(8) := 10485760;


   TYPE T_RC_INFO IS REF CURSOR;

   PROCEDURE VERSION;

   PROCEDURE JOURNALISER
   (
      A_SOURCE IN JOURNAL.SOURCE%TYPE
     ,A_NIVEAU IN JOURNAL.NIVEAU%TYPE
     ,A_TEXTE  IN JOURNAL.TEXTE%TYPE
   );

   PROCEDURE TRAITEMENT_EVENEMENTS_AGT_BD
   (
      A_VERSION_AGENT     IN  VARCHAR2 DEFAULT 'N/D'
     ,A_NOM_SERVEUR       IN  CIBLE.NOM_SERVEUR%TYPE
     ,A_NOM_EVENEMENT     IN  EVENEMENT.NOM_EVENEMENT%TYPE
     ,A_FREQU_VERIF_AGENT OUT PARAMETRE.FREQU_VERIF_AGENT%TYPE
     ,A_CUR_INFO          OUT T_RC_INFO
   );

   PROCEDURE SAUVEGARDE_STATUT_EVEN_AGT_BD
   (
      A_NOM_CIBLE     IN HIST_EVENEMENT_CIBLE_AGT.NOM_CIBLE%TYPE
     ,A_NOM_EVENEMENT IN HIST_EVENEMENT_CIBLE_AGT.NOM_EVENEMENT%TYPE
     ,A_TEXTE         IN HIST_EVENEMENT_CIBLE_AGT.TEXTE%TYPE
   );

   PROCEDURE TRAITER_STATUT_EVEN_AGT_BD
   (
      A_NOM_SERVEUR IN CIBLE.NOM_SERVEUR%TYPE
   );

   FUNCTION OBTENIR_DESTI_NOTIF
   (
      A_TYPE_CIBLE      IN EVENEMENT_CIBLE.TYPE_CIBLE%TYPE
     ,A_SOUS_TYPE_CIBLE IN EVENEMENT_CIBLE.SOUS_TYPE_CIBLE%TYPE
     ,A_NOM_EVENEMENT   IN EVENEMENT_CIBLE.NOM_EVENEMENT%TYPE
     ,A_TEXTE           IN HIST_EVENEMENT_CIBLE_AGT.TEXTE%TYPE
   )
   RETURN EVENEMENT.DESTI_NOTIF_DEFAUT%TYPE;
   PRAGMA RESTRICT_REFERENCES(OBTENIR_DESTI_NOTIF,WNDS,WNPS,TRUST); 

   PROCEDURE ENREGISTRER_AGT
   (
      A_NOM_SERVEUR        IN INFO_AGT.NOM_SERVEUR%TYPE
     ,A_NOM_OS             IN INFO_AGT.NOM_OS%TYPE
     ,A_USAGER_EXECUTION   IN INFO_AGT.USAGER_EXECUTION%TYPE
     ,A_LISTE_INTERPRETEUR IN VARCHAR2
     ,A_STATUT_TACHE       IN VARCHAR2                                      DEFAULT 'AC'
     ,A_SYS_UPTIME         IN CD_INFO_STATIQUE_AGT.SYS_UPTIME%TYPE          DEFAULT NULL
     ,A_SYS_ARCH           IN CD_INFO_STATIQUE_AGT.SYS_ARCH%TYPE            DEFAULT NULL
     ,A_SYS_VENDOR         IN CD_INFO_STATIQUE_AGT.SYS_VENDOR%TYPE          DEFAULT NULL
     ,A_SYS_DESCRIPTION    IN CD_INFO_STATIQUE_AGT.SYS_DESCRIPTION%TYPE     DEFAULT NULL
     ,A_SYS_VENDOR_NAME    IN CD_INFO_STATIQUE_AGT.SYS_VENDOR_NAME%TYPE     DEFAULT NULL
     ,A_SYS_VENDOR_VERSION IN CD_INFO_STATIQUE_AGT.SYS_VENDOR_VERSION%TYPE  DEFAULT NULL
     ,A_SYS_VERSION        IN CD_INFO_STATIQUE_AGT.SYS_VERSION%TYPE         DEFAULT NULL
     ,A_SYS_PATCH_LEVEL    IN CD_INFO_STATIQUE_AGT.SYS_PATCH_LEVEL%TYPE     DEFAULT NULL
     ,A_SYS_NB_CORE        IN CD_INFO_STATIQUE_AGT.SYS_NB_CORE%TYPE         DEFAULT NULL
     ,A_HAR_CPU_VENDOR     IN CD_INFO_STATIQUE_AGT.HAR_CPU_VENDOR%TYPE      DEFAULT NULL
     ,A_HAR_CPU_MODEL      IN CD_INFO_STATIQUE_AGT.HAR_CPU_MODEL%TYPE       DEFAULT NULL
     ,A_HAR_CPU_CLOCK_MHZ  IN CD_INFO_STATIQUE_AGT.HAR_CPU_CLOCK_MHZ%TYPE   DEFAULT NULL
     ,A_HAR_RAM_SIZE       IN CD_INFO_STATIQUE_AGT.HAR_RAM_SIZE%TYPE        DEFAULT NULL
   );

   PROCEDURE TRAITEMENT_EPURATION_AGT
   (
      A_NOM_SERVEUR IN  CIBLE.NOM_SERVEUR%TYPE
     ,A_CUR_INFO    OUT T_RC_INFO
   );

   PROCEDURE TRAITEMENT_TACHES_AGT
   (
      A_NOM_SERVEUR             IN  CIBLE.NOM_SERVEUR%TYPE
     ,A_FREQU_VERIF_AGENT_TACHE OUT PARAMETRE.FREQU_VERIF_AGENT_TACHE%TYPE
     ,A_CUR_INFO                OUT T_RC_INFO
   );

   PROCEDURE CHANGER_STATUT_EXEC_TACHE_AGT
   (
      A_ID_SOUMISSION IN HIST_TACHE_AGT.ID_SOUMISSION%TYPE
     ,A_STATUT_EXEC   IN HIST_TACHE_AGT.STATUT_EXEC%TYPE
     ,A_CODE_RETOUR   IN HIST_TACHE_AGT.CODE_RETOUR%TYPE DEFAULT NULL
   );

   PROCEDURE AJOUTER_JOURNAL_TACHE_AGT
   (
      A_ID_SOUMISSION IN HIST_TACHE_AGT.ID_SOUMISSION%TYPE
     ,A_JOURNAL       IN HIST_TACHE_AGT.JOURNAL%TYPE
     ,A_VIDER_JOURNAL IN NUMBER DEFAULT 0
   );


   PROCEDURE ENREGISTRER_INFO_DYNAMIQUE
   (
      A_DH_COLLECTE_DONNEE IN CD_INFO_DYNAMIQUE_AGT.DH_COLLECTE_DONNEE%TYPE
     ,A_NOM_SERVEUR        IN CD_INFO_DYNAMIQUE_AGT.NOM_SERVEUR%TYPE
     ,A_MEM_TOTAL          IN CD_INFO_DYNAMIQUE_AGT.MEM_TOTAL%TYPE
     ,A_MEM_ACTUAL_USED    IN CD_INFO_DYNAMIQUE_AGT.MEM_ACTUAL_USED%TYPE
     ,A_MEM_ACTUAL_FREE    IN CD_INFO_DYNAMIQUE_AGT.MEM_ACTUAL_FREE%TYPE
     ,A_MEM_USED           IN CD_INFO_DYNAMIQUE_AGT.MEM_USED%TYPE
     ,A_MEM_FREE           IN CD_INFO_DYNAMIQUE_AGT.MEM_FREE%TYPE
     ,A_SWP_TOTAL          IN CD_INFO_DYNAMIQUE_AGT.SWP_TOTAL%TYPE
     ,A_SWP_USED           IN CD_INFO_DYNAMIQUE_AGT.SWP_USED%TYPE
     ,A_SWP_FREE           IN CD_INFO_DYNAMIQUE_AGT.SWP_FREE%TYPE
     ,A_SWP_PAGE_IN        IN CD_INFO_DYNAMIQUE_AGT.SWP_PAGE_IN%TYPE
     ,A_SWP_PAGE_OUT       IN CD_INFO_DYNAMIQUE_AGT.SWP_PAGE_OUT%TYPE
     ,A_SWP_DELTA_PAGE_IN  IN CD_INFO_DYNAMIQUE_AGT.SWP_DELTA_PAGE_IN%TYPE
     ,A_SWP_DELTA_PAGE_OUT IN CD_INFO_DYNAMIQUE_AGT.SWP_DELTA_PAGE_OUT%TYPE
     ,A_SYS_LOAD_AVG       IN CD_INFO_DYNAMIQUE_AGT.SYS_LOAD_AVG%TYPE
     ,A_LISTE_USER_TIME    IN VARCHAR2
     ,A_LISTE_SYS_TIME     IN VARCHAR2
     ,A_LISTE_NICE_TIME    IN VARCHAR2
     ,A_LISTE_WAIT_TIME    IN VARCHAR2
     ,A_LISTE_TOTAL_TIME   IN VARCHAR2
     ,A_LISTE_IDLE_TIME    IN VARCHAR2
   );


END SDBM_AGENT;
/

